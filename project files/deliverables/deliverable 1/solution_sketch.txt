\section{Solution Sketch}

\subsection{Architecture}


\subsection{Technologies in Use}
%
%
%
\subsubsection{Programming Languages}
\textbf{PHP}\\
We decided to use PHP as the code base for mytinerary. It is a quick and easy server side scripting language. PHP has a large community, which meant that most problems faced by developers would have pre-existing solutions. We decided to use an older version, PHP 5.5, because the most recent version, PHP 7, was not working properly with the Code Igniter framework we were using (described in section \ref{codeIgniter}). Another important advantage is that PHP is part of the development platform WAMP, which is described in section \ref{webanddata}, which made installation easy.
\\
%
\textbf{Javascript}\\
JavaScript is a high-level, dynamic and untyped programming language. Since Javascipt is commonly used for web development, it is supported by most browsers, including: Internet Explorer, Chrome, Firefox and Safari. In order to transfer data, we will be using JSON (Javascript Object Notation) in place of the more common XML. This choice was motivated by the fact that JSON is more lightweight, making network transmissions and read/writes faster. JSON is also far more human-readable compared to XML.\\
%
\textbf{HTML}\\
HTML (Hyper Text Markup Language) is a markup language used for creating web pages. It is by far the most commonly used markup language, and therefore has the most cross-platform support. We used the most recent version HTML5, which is quickly rising in popularity. 
\\
%
\textbf{CSS}\\
CSS (Cascading Style Sheets) is a style sheet language used for creating a layout and styling a web page. Like Javascipt and HTML, CSS is one of the more common languages used in web development. CSS is used primarily to allow the separation of a web page's content from it's presentation; this makes code cleaner and more reusable. We will be ussing CSS3, the most recent version.
%
\\
\textbf{SQL}\\
SQL (Structured Query Language) is a special-purpose programming language used to access and manipulate databases. We will be using it to manage our MySQL database (described in section \ref{MySQL}). We chose SQL since it makes retrieving large amounts of records from databases quick and efficient it is the standard language for this task. We will be using the most recent version, SQL:2011.
%
%
%
\subsubsection{Libraries and Frameworks} 
\textbf{Bootstrap}\\
Bootstrap is a HTML, CSS, and JavaScript framework used for developing web pages. We chose Bootstrap as it is easy to use and has a large community with extensive documentation. Furthermore, Bootstrap supports the most popular browsers and as well as fixes some compatibility issues with CSS. We will be using the most recent stable release, Bootstrap 3.3.6.
\\
%
\textbf{CodeIgniter} \label{codeIgniter} \\
CodeIgniter is an open source PHP framework used in web development. It is loosely based on the Model-View-Controller pattern. We will be using the most recent stable release, 3.0.4.
\todo[inline]{Why CodeIgniter and not Laravel?}
%
\textbf{Ajax}\\
\todo[inline]{Why Ajax?}
%
\textbf{jQuery}\\
\\
%
\textbf{Normalize.css}
\\
%
%
%
\subsubsection{Webserver and Databases} \label{webanddata} 
\textbf{Apache}\\
\\

\textbf{MySQL} \label{MySQL} \\

\textbf{PHPmMyAdmin}\\
\\
%
\textbf{dbForge}\\
\\
%
\textbf{WampServer}
\\
%
\subsubsection{IDEs}
\textbf{Notepad++}\\
\\
%
\textbf{PHPStorm}
\\
%
%
%
\subsubsection{Documentation and Collaboration Software}
\textbf{Slack}\\
\\
%
\textbf{GitHub}\\
\\
%
\textbf{ShareLaTeX}\\
\\
%
\textbf{Gliffy}\\
\\
%
